# ============================================================================
# Flow-Backend .gitignore
# FastAPI Microservices Architecture with Docker, PostgreSQL, Redis
# ============================================================================

# ============================================================================
# Python
# ============================================================================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.local
.env.development
.env.test
.env.production
.env.staging
.env.security
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ============================================================================
# FastAPI / Web Framework Specific
# ============================================================================
# Uploaded files
uploads/
media/
static/uploads/
temp/
tmp/

# Session files
sessions/

# ============================================================================
# Database
# ============================================================================
# SQLite databases
*.db
*.sqlite
*.sqlite3

# PostgreSQL dumps
*.sql
*.dump

# Database migration files (keep structure, ignore data)
**/migrations/versions/*.py
!**/migrations/versions/__init__.py
!**/migrations/versions/README.md

# Alembic
alembic.ini.local

# ============================================================================
# Security & Secrets
# ============================================================================
# Environment files with secrets
.env*
!.env.example
!.env.template

# SSL/TLS certificates and keys
*.key
*.pem
*.crt
*.cer
*.p12
*.pfx
*.jks
*.keystore

# JWT secrets and tokens
jwt_secret*
*.jwt
tokens/

# API keys and secrets
secrets/
.secrets/
api_keys/
credentials/

# Security configuration files
security.conf.local
.security/

# ============================================================================
# Docker
# ============================================================================
# Docker volumes and data
docker-data/
postgres-data/
redis-data/
rabbitmq-data/
mongodb-data/

# Docker override files
docker-compose.override.yml
docker-compose.local.yml

# Docker build context files
.dockerignore.local

# ============================================================================
# Logs
# ============================================================================
# Application logs
logs/
*.log
*.log.*
log/

# Service-specific logs
*-service/logs/
*-service/*.log

# System logs
/var/log/
syslog
auth.log

# Nginx logs
access.log
error.log

# ============================================================================
# IDE and Editor Files
# ============================================================================
# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Sublime Text
*.sublime-workspace
*.sublime-project

# ============================================================================
# Operating System Files
# ============================================================================
# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# Linux
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# ============================================================================
# Monitoring and Analytics
# ============================================================================
# Monitoring data
monitoring/
metrics/
grafana-data/
prometheus-data/

# Analytics
analytics/
reports/

# ============================================================================
# Backup Files
# ============================================================================
# Backup files
*.bak
*.backup
*.old
*.orig
*.save
*.tmp

# Database backups
backup/
backups/
*.backup.sql

# ============================================================================
# Cache and Temporary Files
# ============================================================================
# General cache
cache/
.cache/
tmp/
temp/

# Redis dumps
dump.rdb

# Node.js (if any frontend components)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# ============================================================================
# Project Specific
# ============================================================================
# File uploads directory
uploads/
user-uploads/
profile-pictures/
documents/

# Generated documentation
docs/build/
docs/_build/

# Test artifacts
test-results/
test-reports/
.coverage
htmlcov/

# Local development files
local/
dev/
development/

# Compiled translations
*.mo

# ============================================================================
# End of .gitignore
# ============================================================================